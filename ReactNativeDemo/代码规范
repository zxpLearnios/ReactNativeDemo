一 文件与组件命名
 扩展名: 使用.js作为js文件的扩展名。如果同一个文件夹下有同名而不同作用的js文件，则通过中缀（小写）进一步区分，例如：HomePageView.component.js, HomePageView.style.js, HomePageView.action.js等
 文件名: 使用驼峰命名法且首字母大写，如HomePageView.js
 组件命名: 与文件名（除中缀外）完全一致。如果组件单独放置在目录中，则目录名也一致
 所有js :  用'use strict'; 处理

二 变量与常量声明
    变量
        尽量使用let来代替var
        对于全局变量声明，采用global.xxx = xxx，但应避免声明过多全局变量污染环境
    常量
        对于常量应使用const进行声明，命名采用驼峰写法
        对于使用 immutable 数据应用const进行声明
    如果此变量（常量）是全局化，就定义到全局文件中，如果只是一个文件使用，就定义在这个文件中。

三 组件
    组成部分有index.js package.json ReadMe 三要素

四 RN与原生组件交互
   原生组件提供组件方法index.js，前端直接调用，如果Android 和IOS 有不同信息，在此处区分。

五 接口服务
    采用 async await 方式来调用，异常处理try catch.

六 资源文件处理
    1 本地图片，压缩75%(视情况而定）尽量小，保持清晰度。
    2 所有图片均放在content目录下面的img文件夹下。
    3 图片格式仅限png || jpg|| gif (android 支持）。
    4 公共样式、颜色，统一定义。

七 日志信息和无效的引用
   1 console debugger 调试 无效的引用，必须删除（release包）

八 注释规范
    1 react jsx  {/*<View style={styles.contactView}>*/}
    2 css 注释格式 /*这里是注释*/
    3 js 注释 单行注释采用 //这里是注释,多行注释采用 /*这里是注释*/


十 其他规范以及提醒
     1、SVN迁入时 写好注释
     2、SVN冲突时不要覆盖别人带吧，和当事人一起进行合并
     3、合理利用插件，不要乱加插件，插件错误请及时移除
     4、特殊文件ios的 .a文件mac 系统无法签入，采用Windows系统签入，ocr 快捷方式文件，暂用本地替换方式。
     5、注意提供代码注释，便于以后的跟踪和管理。
     6、开发工程中严格按照分工完成页面，如果有公共界面，采用组件化的方式，避免重复开发。
     7、减少冗余代码，书写所有人都可以看的懂得代码,采用ES6 新特性的。


